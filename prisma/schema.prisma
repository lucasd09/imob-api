generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  password  String
  Owner     Owner[]
  Renter    Renter[]
  Property  Property[]
  Ownership Ownership[]
}

model Owner {
  id         Int         @id @default(autoincrement())
  name       String
  properties Property[]  @relation("Ownership")
  ownership  Ownership[]
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
}

model Renter {
  id       Int        @id @default(autoincrement())
  name     String
  user     User       @relation(fields: [userId], references: [id])
  userId   Int
  Contract Contract[]
}

model Property {
  id        Int            @id @default(autoincrement())
  address   String
  status    PropertyStatus
  owners    Owner[]        @relation("Ownership")
  ownership Ownership[]
  user      User           @relation(fields: [userId], references: [id])
  userId    Int
  Contract  Contract[]
}

model Ownership {
  id          Int      @id @default(autoincrement())
  cut         Float
  isMainOwner Boolean
  property    Property @relation(fields: [propertyId], references: [id])
  owner       Owner    @relation(fields: [ownerId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  propertyId  Int
  ownerId     Int
}

model Contract {
  id         Int            @id @default(autoincrement())
  property   Property       @relation(fields: [propertyId], references: [id])
  renter     Renter         @relation(fields: [renterId], references: [id])
  value      Float
  status     ContractStatus
  startDate  DateTime
  endDate    DateTime
  propertyId Int
  renterId   Int
}

enum PropertyStatus {
  AVAILABLE
  RENTED
}

enum ContractStatus {
  EDITING
  ACTIVE
  CLOSED
}
