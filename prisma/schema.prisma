generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  name      String
  password  String
  access    Boolean
  Owner     Owner[]
  Renter    Renter[]
  Property  Property[]
  Ownership Ownership[]
  Contract  Contract[]
  Billing   Billing[]
}

model Owner {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  ownership Ownership[]
  name      String
  email     String
  cnpjcpf   String
  ierg      String
  phone     String
  pessoa    TipoPessoa
  birthdate DateTime
  userId    Int

  @@index([userId])
}

model Renter {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  Contract  Contract[]
  name      String
  email     String
  cnpjcpf   String
  ierg      String
  phone     String
  pessoa    TipoPessoa
  birthdate DateTime
  userId    Int

  @@index([userId])
}

model Property {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  ownership  Ownership[]
  Contract   Contract[]
  address    String
  number     Int
  zipcode    String
  city       String
  district   String
  complement String
  uf         String
  avaliable  Boolean
  userId     Int

  @@index([userId])
}

model Ownership {
  id          Int      @id @default(autoincrement())
  property    Property @relation(fields: [propertyId], references: [id])
  owner       Owner    @relation(fields: [ownerId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  cut         Float
  isMainOwner Boolean
  userId      Int
  propertyId  Int
  ownerId     Int      @unique

  @@index([ownerId])
  @@index([propertyId])
  @@index([userId])
}

model Contract {
  id         Int            @id @default(autoincrement())
  property   Property       @relation(fields: [propertyId], references: [id])
  renter     Renter         @relation(fields: [renterId], references: [id])
  user       User           @relation(fields: [userId], references: [id])
  Billing    Billing[]
  value      Float
  status     ContractStatus
  startDate  DateTime
  endDate    DateTime
  propertyId Int
  renterId   Int
  userId     Int

  @@index([propertyId])
  @@index([renterId])
  @@index([userId])
}

model Billing {
  id           Int           @id @default(autoincrement())
  contract     Contract      @relation(fields: [contractId], references: [id])
  user         User          @relation(fields: [userId], references: [id])
  type         BillingType
  installments Installment[]
  contractId   Int
  userId       Int

  @@index([contractId])
  @@index([userId])
}

model Installment {
  id        Int      @id @default(autoincrement())
  billing   Billing  @relation(fields: [billingId], references: [id])
  number    Int
  value     Float
  dueDate   DateTime
  paid      Boolean
  billingId Int

  @@index([billingId])
}

enum ContractStatus {
  EDITING
  ACTIVE
  CLOSED
}

enum TipoPessoa {
  FISICA
  JURIDICA
}

enum BillingType {
  RENT
  INSURANCE
}
